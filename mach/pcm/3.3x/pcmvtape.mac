
lkenn	equ	014h
begvt::	ld	a,aspaw		
	out	(bank),a
	ld	sp,stapze	
	IF	pcmuhr eq 1
	ld 	hl,adruhr	
	ld	b,5
uhrclr:	ld	(hl),0
	inc	hl
	djnz	uhrclr	
	ENDIF
	call	sysini		
	ld	c,2		
	IF	svtape eq 1
	call	wzk1		
	ENDIF
rboot:	ld	hl,bios		
	ld	de,jumtab	
	ld	bc,0034h	
	ldir
	IF	statusz eq 1
	ld	hl,devsp
	res	5,(hl)		
	ENDIF
	ld	hl,vco1
	ld	(jumtab+0dh),hl
headl:	call	agzk		
	db	0ch,'PC/M - SYS '
	vers
	db	0dh,0ah
	db	'  +++ AM90 +++',0dh,0ah,8ah	
inist:	ld	sp,stapze
	call	cdsuch
	jr	inist
derror:	call	agzk
	db	'ERROR',0dh,0ah,087h
	ret
error:	call	derror
	jp	inist
grklo:	ld	a,(de)		
grkl:	cp	07fh		
	ret	z		
	cp	060h		
	ret	c		
	res	5,a		
	ret	
zwsp:	ds	5		
wab:	xor	a		
	ld	hl,zwsp
	ld	(hl),a
	inc	hl
	ld	(hl),a
	inc	hl
	ld	(hl),a
	ld	b,03ch
waba:	ld	a,(de)
	cp	020h
	inc	de
	jr	nz,wabb
	djnz	waba
	jr	wab3
wabb:	dec	de
wab1:	call	grklo
wab3:	dec	hl
	dec	hl
	sub	030h
	ret	m
	cp	00ah
	jr	c,wab2
	sub	007h
	cp	00ah
	ret	m
	cp	010h
	ret	p
wab2:	inc	de
	inc	(hl)
	inc	hl
	rld
	inc	hl
	rld
	jr	wab1
asbin:	push	bc		
	call	wab
	inc	hl
	ld	b,h
	ld	c,l
	ld	l,(hl)
	inc	bc
	ld	a,(bc)
	ld	h,a
	pop	bc
	ret	
zahex:	ld	a,h		
	call	ahex		
	ld	a,l
ahex:	push	af		
	rra			
	rra
	rra
	rra
	call	ah1
	pop	af
ah1:	and	00fh
	add	a,030h
	cp	03ah
	jr	c,ah2
	add	a,007h
ah2:	ld	c,a
	jp	conout
vco1:	push	bc
	push	af
	ld	a,c
	cp	01bh
	jr	nz,vco2
	call	conout
	ld	c,d
	call	conout
	ld	c,e
	call	conout
	jr	vco3
vco2:	res	7,c
	call	conout
vco3:	pop	af
	pop	bc
	ret	
cdsuch:	call	agzk		
	db	'V','>'+80h	
eg1:	call	conin		
	call	grkl		
	cp	0dh		
	jr	z,eg0
	ld	c,a		
	call	conout
	jr	eg1		
eg0:	call	wrzva
	ld	hl,bsanf+(bline*bwidth)-1
	ld	bc,(bline*bwidth)-1
	ld	a,'>'
eg2:	cpd			
	jr	nz,eg2		
	inc	hl
	inc	hl
	ex	de,hl
eingab:	call	grklo		
	inc	de
	ex	af,af'
	ld	a,(de)
	cp	' '		
	jr	z,einga1
	IF	svtape eq 1
	dec	de		
	ld	a,0ffh		
	ld	(ldname+1bh),a
	jp	xeq1
	ENDIF
einga1:	ex	af,af'		
	inc	de
	IF	svtape eq 1
	ld	(ldname+1bh),a
	cp	'R'		
	jp	z,read1
	cp	'W'		
	jp	z,write1
	cp	'S'		
	jp	z,save1
	cp	'L'		
	jp	z,load1
	cp	'X'		
	jp	z,xeq1
	cp	'V'		
	jp	z,ver1
	cp	'Z'		
	jp	z,wzk
	cp	'I'		
	jp	z,dir1
	ENDIF
	cp	'B'		
	jr	z,rom1
	cp	'0'		
	jr	z,bank0
	cp	'1'		
	jr	z,bank1
	cp	'2'		
	jr	z,bank2
	cp	'C'		
	jr	z,vboot
	IF	flopy eq 1
	IF	durlad eq 1
	cp	'K'		
	jp	z,uurlad
	ENDIF
	ENDIF
	IF	sdebug eq 1
	cp	'D'		
	jp	z,debug
	ENDIF
	cp	'F'		
	jr	z,form1
	cp	' '		
	jp	z,cdsuch
	cp	'G'		
	jp	nz,error
gom1:	call	asbin		
	jp	(hl)		
rom1:	xor	a		
	jr	bb		
bank0:	ld	a,aspaw		
bb:	out	(bank),a
	ret	
bank1:	ld	a,srfaw		
	jr	bb
bank2:	ld	a,srfaw+1	
	jr	bb
vboot:	xor	a		
	ld	(kslw),a
	call	agzk
	db	0ch,'PC/M-ROM-Urlader'
	VERS
	db	0dh,08ah 
	jp	boot
lwausw:	ld	a,(de)		
	and	00fh		
	ret	z		
	dec	a
	ld	c,a
	push	bc
	call	seldsk		
	ld	a,h
	or	l
	pop	bc
	ld	a,c		
	ret			
form1:	call	lwausw		
	jp	z,error
	call	tesra1		
	push	af		
	ld	a,(ix+13)	
	ld	hl,0		
	or	a		
	jr	z,nspsy
	ld	de,0800h	
	ld	b,a		
syspl:	add	hl,de		
	djnz	syspl		
nspsy:	pop	af		
	ld	c,emlaw
	cp	'L'		
	jr	z,form2
	ld	c,srfaw	
	cp	'R'		
	jr	z,form2
	ld	c,zraaw1
	cp	'M'		
	jp	nz,error
form2:	ld	a,c
	out	(bank),a
	ld	d,h
	ld	e,l
	inc 	de
	ld	bc,007ffh	
	ld	(hl),0e5h	
	ldir
	ld	a,aspaw		
	jr	bb
	IF	svtape eq 1
osu:	ld	b,03ch		
osu1:	ld	a,(de)
	inc	de
	cp	02fh
	ret	z
	djnz	osu1
	scf
	ret	
if1:	call	agzk
	db	'   BOF',':'+80h
i2:	ld	hl,(zadmer)
	ld	de,(ldname+16h)
	add	hl,de
	call	zahex
	call	agzk
	db	'   EOF',':'+80h
i4:	ld	hl,(ldname+10h)
	ld	de,(ldname+0fh)
	dec	e
	ld	d,0
	add	hl,de
	ld	de,(ldname+16h)
	add	hl,de
	call	zahex
	call	agzk
	db	'   SOF',':'+80h
i6:	ld	hl,(ldname+12h)
	jp	zahex
kenn0:	ld	bc,40		
	jr	ken1
ke1:	ld	bc,00200h	
	jr	ken1
kenn:	ld	bc,00400h	
ken1:	ld	a,0e6h		
	call	out		
	dec	bc
	ld	a,c
	or	b
	jr	nz,ken1		
	ret	
read1:	ld	hl,ldname+1ch	
	xor	a
	ld	(hl),a
	ld	ix,ldname+1dh
	ld	(ix),a		
	ld	hl,0ffffh
	ld	(svname+14h),hl
	call	seld		
	push	hl		
	pop	bc		
readl:	push	bc		
	ld	hl,rwbuff
	ld	(ldname+16h),hl	
	call	lon		
	call	laden		
	call	wruck		
	ld	bc,rwbuff	
	call	setdma
	call	write		
	call	nextnr		
	ld	bc,rwbuff+80h	
	call	setdma
	call	write
	call	nextnr		
	pop	bc		
	dec	bc
	ld	a,b
	or	c		
	jr	nz,readl	
	call	off		
	jp	bell3		
seld:	call	name		
	inc 	de		
	call	lwausw		
	jp	z,error
	call	dpbix		
	ld	h,(ix+6)
	ld	l,(ix+5)
	inc	hl		
	ld	a,(ix+2)	
	cp	3
	jr	z,nur1kb	
	add	hl,hl		
nur1kb:	add	hl,hl		
	add	hl,hl		
	ld	a,(ix+13)	
	or	a		
	jr	z,nosysp		
	ld	b,a		
	push	hl
	ld	hl,0
	ld	d,h
	ld	e,(ix+0)	
	srl	e		
adslop:	add	hl,de		
	djnz	adslop		
	ex	de,hl		
	pop	hl
	add	hl,de		
nosysp:	ld	a,(ix)		
	ld	(anzsek),a	
	push	hl		
	ld	bc,0		
	ld	(mersec),bc	
	ld	(mertrk),bc	
	ld	(zaehl),bc	
	ld	(svname+0ch),bc	
	call	setsec		
	call	home		
	pop	hl		
	ret			
write1:	xor	a
	ld	(ldname+1bh),a	
	call	seld		
	push	hl		
	ld	a,'D'		
	ld	(ldname+1ah),a	
	call	son		
	call	kenn		
	pop	bc
wrlpp:	push	bc
	ld	bc,rwbuff
	call	setdma		
	call	read		
	call	nextnr		
	ld	bc,rwbuff+80h	
	call	setdma		
	call	read		
	call	nextnr		
	ld	hl,rwbuff
	ld	de,rwbuff+0ffh	
	di			
	call	aus		
	ei			
	call	wruck		
	ld	bc,00400h
zlop:	dec	bc		
	ld	a,b
	or	c
	jr	nz,zlop
	ld	hl,(zaehl)
	srl	h
	rr	l
	ld	(svname+0ch),hl	
	call	zahex		
	pop	bc
	dec	bc
	ld	a,b
	or	c		
	jr	nz,wrlpp	
	call	off		
	jp	bell3		
nextnr:	ld	hl,(zaehl)	
	inc	hl		
	ld	(zaehl),hl	
	ld	bc,(mersec)	
	inc	bc		
	ld	(mersec),bc	
	ld	a,(anzsek)	
	cp	c		
	jp	nz,setsec	
	ld	bc,0		
	ld	(mersec),bc	
	call	setsec		
	ld	bc,(mertrk)	
	inc	bc		
	ld	(mertrk),bc	
	jp 	settrk		
save1:	ld	a,0aah		
	ld	(ldname+1ah),a
	xor	a
	ld	l,a
	ld	h,a
	ld	(svname+0ch),hl	
	call	name		
	call	asbin		
	ld	(svname+14h),hl	
	call	asbin
	ld	(svname+16h),hl	
	call	asbin
	ld	(svname+12h),hl	
	call	osu		
	jr	c,bnr1
	ld	a,(de)
	cp	'D'		
	jr	z,bnr0
	cp	'F'		
	jr	nz,bnr
	ld	(ldname+1ah),a	
bnr0:	ld	(optsp),a	
	inc	de
bnr:	call	asbin		
	ld	(svname+0ch),hl	
bnr1:	ld	hl,(svname+0ch)
	call	zahex		
	ld	hl,(svname+14h)	
	ld	de,(svname+16h)	
	call	son		
	call	kenn		
aus:	push	de
	ex	de,hl
	or	a
	sbc	hl,de		
	ld	a,h
	or	a
	inc	hl
	jr	z,eblock	
	xor	a
	ld	(svname+0fh),a
	ld	(svname+0eh),a
	ld	a,(ldname+1ah)
	jr	neblck
eblock:	ld	a,l		
	ld	(svname+0fh),a	
	ld	a,(ldname+1ah)
	ld	(svname+0eh),a
neblck:	ld	a,(optsp)	
	cp	'D'		
	call	z,ke1		
	call	kenn0		
kblock:	ex	de,hl
	ld	(svname+10h),hl
	call	block
	pop	de
	ld	a,(svname+0eh)
	cp	'D'		
	ret	z		
	cp	040h
	jp	nc,bell3	
	push	hl
	ld	hl,(svname+0ch)
	inc	hl
	push	hl
	push	de
	call	awr
	pop	de
	pop	hl
rt2:	call	zahex
	ld	(svname+0ch),hl
	pop	hl
	jr	aus
block:	ld	de,svname
	ld	c,000h
	ex	de,hl
	call	syn
	ld	a,0b4h
	call	out
	ld	b,lkenn
	call	bout
	ex	de,hl
	ld	c,000h
	call	syn
	ld	a,06bh
	call	out
	ld	a,(svname+0fh)
	ld	b,a
	and	(hl)
bout:	ld	a,c
	add	a,(hl)
	ld	c,a
	ld	a,(hl)
	call	out
	inc	hl
	and	(hl)
	djnz	bout
	ld	a,c
	ex	(sp),hl
	ex	(sp),hl
out:	push	bc
	ld	c,a
	scf
	rl	c
nextb1:	in	a,(ptasdb)
	set	6,a
	jr	nc,bit0
	and	0bfh
bit0:	out	(ptasdb),a
zk4:	ld	a,013h
lopp1:	dec	a
	jr	nz,lopp1
	and	(hl)
	in	a,(ptasdb)
	xor	040h
	out	(ptasdb),a
	rl	c
	jr	z,zk6
zk5:	ld	a,011h
lopp2:	dec	a
	jr	nz,lopp2
	jr	nextb1
zk6:	ld	a,009h
lopp3:	dec	a
	jr	nz,lopp3
	and	(hl)
	pop	bc
lbabf:	in	a,(ptasda)
	cp	cures
	ret	nz
	call	wrzva
	jp	inist
syn:	ld	b,00ah
syn1:	ld	a,0e6h
	or	a
	call	out
	inc	(hl)
	dec	(hl)
	djnz	syn1
	ret	
ver1:	xor	a
	ld	(ldname+1ch),a
ver2:	ld	b,0ffh
	jp	lanf
xeq1:	call	load1
	ld	hl,(ldname+12h)
	jp	(hl)
name:	xor	a		
	ld	(optsp),a	
	ld	hl,svname
	push	hl
	ld	b,00ch
nam4:	ld	(hl),020h
	inc	hl
	djnz	nam4
	ld	b,009h
	pop	hl
	ld	a,(ldname+1bh)
	inc	a
	jr	nz,nam1
	dec	b
nlop:	ld	a,(de)
	ld	(hl),a
	inc	hl
	inc	de
	djnz	nlop
	ld	(hl),'.'
	inc	hl
	ld	(hl),'C'
	inc	hl
	ld	(hl),'O'
	inc	hl
	ld	(hl),'M'
	ret	
nam1:	ld	a,(de)
	cp	'.'
	jr	z,nam2
	ld	(hl),a
	inc	hl
	inc	de
	djnz	nam1
inis1:	jp	error
nam2:	ld	hl,svname+08h
	ld	(hl),a
	ld	b,004h
name3:	inc	de
	inc	hl
	ld	a,(de)
	cp	020h
	ret	z
	ld	(hl),a
	djnz	name3
	jr	inis1
lsyn:	xor	a
	ld	(ldname+1eh),a
	push	iy
zk1:	ld	b,01ah
f:	djnz	f
	call	lbit
	cp	0e6h
	jr	z,f1
	cp	019h
	jr	nz,zk1
	ld	a,0ffh
	ld	(ldname+1eh),a
f1:	pop	bc
lsyn1:	ex	(sp),hl
	ex	(sp),hl
	and	(hl)
	and	(hl)
	call	lbyte
	cp	0e6h
	jr	nz,lsyn
	djnz	lsyn1
	or	a
	ex	(sp),hl
	ex	(sp),hl
	and	(hl)
	and	(hl)
lsyn2:	call	lbyte
	cp	c
	ret	z
	cp	0e6h
	jr	z,lsyn2
	jr	lsyn
load1:	xor	a
	ld	b,a
	ld	(ldname+1ch),a
lanf:	ld	h,a
	ld	l,a
	ld	(svname+0ch),hl
	dec	hl
	ld	(svname+14h),hl
	ld	ix,ldname+1dh
	ld	(ix),b
	call	name
	call	asbin
	ld	(ldname+16h),hl
	call	osu
	jr	c,laden
	call	asbin
	ld	(svname+0ch),hl
	call	asbin
	ld	a,h
	or	l
	jr	z,laden
	inc	hl
	ld	(svname+14h),hl
laden:	call	lon
	ld	a,0ffh
	ld	(ldname+1fh),a
vor:	ld	iy,006b4h
	call	lsyn
	ld	bc,01400h
	ld	hl,ldname
lnam:	ex	(sp),iy
	ex	(sp),iy
	call	lbyte
	ld	(hl),a
	add	a,c
	ld	c,a
	inc	hl
	djnz	lnam
	or	a
	call	lbyte
	cp	c
	jr	z,test
prf:	call	chs
	jr	vor
test:	ld	hl,ldname
	push	hl
	ld	b,00ch
naus:	ld	c,(hl)
	inc	hl
	call	conout
	djnz	naus
	call	agzk
	db	020h,0a0h
n2:	ld	hl,(ldname+0ch)
	call	zahex
	pop	de
	ld	hl,svname
	ld	b,00ch
cpcont:	ld	a,(hl)
	cp	'*'
	jr	z,skname
	cp	'?'
	jr	z,skchar
	ld	a,(de)
	call	grkl
	cp	(hl)
	jr	z,skchar
w0:	call	awr
	jr	vor
wvergl:	ld	c,'<'
	jr	nc,wvaus
	ld	c,'>'
wvaus:	call	conout
	ld	hl,(ldname+18h)
	call	zahex
	ld	c,7
	call	conout
	jr	w0
skchar:	inc	hl
skname:	inc	de
	ld	a,004h
	cp	b
	jr	nz,skcont
	ld	hl,svname+09h
skcont:	djnz	cpcont
	ld	hl,(svname+0ch)
ld1:	ld	(ldname+18h),hl	
	ld	de,(ldname+0ch)	
	or	a
	sbc	hl,de		
	jr	nz,wvergl	
	ld	b,5
cllop:	ld	c,' '		
	call	conout
	djnz 	cllop
	ld	hl,(svname+14h)
	sbc	hl,de
	jp	z,bell3		
	ld	hl,(ldname+10h)
	push	de
	ld	a,(ldname+1fh)
	cp	0ffh
	jr	nz,laa1
	ld	(zadmer),hl
	xor	a
	ld	(ldname+1fh),a
	ld	de,(ldname+16h)
	cp	d
	jr	nz,laa2
	cp	e
	jr	z,laa1
laa2:	ex	de,hl
	or	a
	sbc	hl,de
	ex	de,hl
	ld	(ldname+16h),de
laa1:	ld	de,(ldname+16h)
	add	hl,de
	pop	de
	ld	iy,0056bh
	call	lsyn
	ld	c,000h
	ld	a,(ldname+0fh)
	ld	b,a
	ex	(sp),hl
	ex	(sp),hl
lbloc:	call	lbyte
	bit	0,(ix)
	jr	nz,lbloc1
	ld	(hl),a
lbloc1:	cp	(hl)
	jr	nz,verfe
	inc	hl
	add	a,c
	ld	c,a
	djnz	lbloc
	or	a
	call	lbyte
	ld	hl,(svname+0ch)
	ld	(ldname+18h),hl
	cp	c
	jp	nz,prf
	inc	hl
	ld	(svname+0ch),hl
	ld	a,(ldname+0eh)
	cp	'D'
	ret	z		
	cp	0aah
	jp	nz,w0
	call	if1
	jp 	bell3
bell3:	ld	b,3		
bell30:	ld	c,7
	call	conout
	ld	hl,2000h	
bell31:	dec 	hl		
	ld	a,h
	or	l
	jr	nz,bell31
	djnz	bell30	
	ENDIF
wrzva:	IF	svtape eq 1
 	call	off		
	ENDIF
	call	agzk		
	db	0dh,0ah+80h
	ret
	IF 	svtape eq 1
wruck:	ld	c,0dh		
	jp	conout
verfe:	push	af
	call	agzk
	db	'         ADDR:'
	db	0a0h
verf2:	call	zahex
	call	agzk
	db	'  TAPE:',0a0h
verf4:	pop	af
	call	ahex
	call	agzk
	db	'  RAM:',0a0h
verf6:	ld	a,(hl)
	call	ahex
	jp	prf
chs:	call	agzk
	db	0dh
	db	'ERROR > Pruefsumme     ',087h
awr:	call	wruck
	ld	hl,ldname+1ch
	ld	a,(hl)
	cp	055h
	ret	nz
	ld	hl,ldname
	ld	de,zs
	ld	bc,12
awr4:	ld	a,(de)
	inc	de
	cpi
	ret	po
	jr	z,awr4
awr2:	ld	c,0ah
	call	conout
	ld	bc,12
	ld	de,zs
	ld	hl,ldname
	ldir
	ret	
lbyte:	push	bc
	ld	b,008h
zk2:	ld	c,00dh
lyl:	dec	c
	jr	nz,lyl
	jr	lbyte2
zk3:	ld	c,017h		
lyl1:	dec	c
	jr	nz,lyl1
lbyte2:	call	lbit
	djnz	zk3
	ld	c,a
	ld	a,(ldname+1eh)
	xor	c
	pop	bc
	ret	
lbit:	push	af		
	in	a,(ptasdb)
	and	080h
	ld	c,a
lbit1:	in	a,(ptasdb)
	and	080h
	cp	c
	jr	z,lbit1
	ld	c,a
	call	lbabf
	pop	af
	rl	c
	rla
	ret	
off:	ei			
	in	a,(ptasdb)	
	and	0cfh
off1:	out	(ptasdb),a
	ret	
lon:	di			
	in	a,(ptasdb)	
	set	5,a
	jr	off1
son:	di			
	in	a,(ptasdb)	
	or	030h
	jr	off1
wzk:	call	asbin		
	ld	a,h		
	ld	c,000h
	cp	012h		
	jr	z,wzk1
	inc	c
	cp	024h		
	jr	z,wzk1
	inc	c
	cp	036h		
	jr	z,wzk1
	inc	c
	cp	048h		
	jp	nz,error	
wzk1:	ld	hl,cotab	
	ld	b,000h
	ld	a,c
	add	a,a
	add	a,a
	add	a,a
	ld	c,a
	add	hl,bc
	ld	a,(hl)
	inc	hl
	ld	(zk1+01h),a	
	ld	a,(hl)		
	inc	hl
	ld	(zk2+01h),a
	ld	a,(hl)
	inc	hl
	ld	(zk3+01h),a
	ld	a,(hl)
	inc	hl
	ld	(zk4+01h),a
	ld	a,(hl)
	inc	hl
	ld	(zk5+01h),a
	ld	a,(hl)
	inc	hl
	ld	(zk6+01h),a
	ret	
dir1:	ld	hl,ldname+1ch
	ld	(hl),055h
	push	hl
	jp	ver2
	IF	fcpu eq 0
cotab:	db	64,61,71,50,48,40,00,00
co24:	db	32,20,30,24,22,14,00,00
co36:	db	21,06,16,16,13,05,00,00
co48:	db	16,01,10,11,09,01,00,00
	ENDIF
	IF	fcpu eq 1
cotab:	db	79,79,89,62,60,52,00,00
co24:	db	39,29,39,30,28,20,00,00
co36:	db	26,13,23,20,17,09,00,00
co48:	db	20,04,14,14,12,04,00,00
	ENDIF
	IF	fcpu eq 2
cotab:	db	80,81,91,63,61,53,00,00
co24:	db	40,30,40,31,28,20,00,00
co36:	db	27,13,23,20,17,10,00,00
co48:	db	20,05,15,14,12,04,00,00
	ENDIF
	IF	fcpu eq 3
cotab:	db	118,129,139,94,92,84,00,00
co24:	db	59,54,64,46,44,36,00,00
co36:	db	39,29,39,30,28,20,00,00
co48:	db	30,17,27,22,20,12,00,00
	ENDIF
	IF	fcpu eq 4
cotab:	db	128,42,152,102,100,92,00,00
co24:	db	64,61,71,50,48,40,00,00
co36:	db	43,34,44,33,30,23,00,00
co48:	db	32,20,30,24,22,14,00,00
	ENDIF
zadmer:	ds	2
zaehl:	ds	2		
anzsek:	ds	1		
mersec:	ds	2		
mertrk:	ds	2		
optsp:	ds	1		
svname:	ds	24		
ldname:	ds	32		
zs:	ds	32		
	ENDIF			

